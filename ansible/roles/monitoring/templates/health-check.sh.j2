#!/bin/bash

# NASAPuff Health Check Script
# This script performs a comprehensive health check of the application

set -e

# Configuration
APP_NAME="nasapuff-web"
HEALTH_URL="http://localhost:{{ nasapuff_app_port }}/health"
API_URL="http://localhost:{{ nasapuff_app_port }}/api/apod"
LOG_FILE="{{ nasapuff_log_dir }}/monitoring/health-check.log"

# Log function
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

# Check if service is running
check_service() {
    if systemctl is-active --quiet "$APP_NAME"; then
        log "PASS: Service is running"
        return 0
    else
        log "FAIL: Service is not running"
        return 1
    fi
}

# Check health endpoint
check_health_endpoint() {
    local response
    response=$(curl -s -w "%{http_code}" "$HEALTH_URL" 2>/dev/null || echo "000")
    local status_code="${response: -3}"
    local body="${response%???}"
    
    if [ "$status_code" = "200" ]; then
        log "PASS: Health endpoint returned 200"
        return 0
    else
        log "FAIL: Health endpoint returned $status_code"
        return 1
    fi
}

# Check API endpoint
check_api_endpoint() {
    local response
    response=$(curl -s -w "%{http_code}" "$API_URL" 2>/dev/null || echo "000")
    local status_code="${response: -3}"
    local body="${response%???}"
    
    if [ "$status_code" = "200" ]; then
        log "PASS: API endpoint returned 200"
        return 0
    else
        log "FAIL: API endpoint returned $status_code"
        return 1
    fi
}

# Check main page
check_main_page() {
    local response
    response=$(curl -s -w "%{http_code}" "http://localhost:{{ nasapuff_app_port }}/" 2>/dev/null || echo "000")
    local status_code="${response: -3}"
    
    if [ "$status_code" = "200" ]; then
        log "PASS: Main page returned 200"
        return 0
    else
        log "FAIL: Main page returned $status_code"
        return 1
    fi
}

# Check log files
check_logs() {
    local app_log="{{ nasapuff_log_dir }}/app.log"
    local gunicorn_log="{{ nasapuff_log_dir }}/gunicorn-error.log"
    
    if [ -f "$app_log" ] && [ -s "$app_log" ]; then
        log "PASS: Application log exists and has content"
    else
        log "WARN: Application log is missing or empty"
    fi
    
    if [ -f "$gunicorn_log" ] && [ -s "$gunicorn_log" ]; then
        # Check for recent errors
        local recent_errors=$(tail -n 100 "$gunicorn_log" | grep -c "ERROR" || echo "0")
        if [ "$recent_errors" -gt 10 ]; then
            log "WARN: High number of recent errors in gunicorn log"
        else
            log "PASS: Gunicorn log looks normal"
        fi
    else
        log "WARN: Gunicorn log is missing or empty"
    fi
}

# Main health check
main() {
    log "INFO: Starting comprehensive health check"
    
    local failures=0
    
    # Run all checks
    if ! check_service; then
        failures=$((failures + 1))
    fi
    
    if ! check_health_endpoint; then
        failures=$((failures + 1))
    fi
    
    if ! check_api_endpoint; then
        failures=$((failures + 1))
    fi
    
    if ! check_main_page; then
        failures=$((failures + 1))
    fi
    
    check_logs
    
    if [ $failures -eq 0 ]; then
        log "PASS: All critical health checks passed"
        exit 0
    else
        log "FAIL: $failures critical health check(s) failed"
        exit 1
    fi
}

# Run main function
main "$@" 